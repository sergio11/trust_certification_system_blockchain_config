spring:
  cloud:
    stream:
          function:
              definition: certificateManagementProcessor
          kafka:
              binder:
                  brokers: kafka:9092
                  auto-create-topics: true
                  configuration.auto.offset.reset: latest
          default:
            consumer:
              concurrency: 2
          bindings:
              certificateManagementProcessor-in-0:
                  destination: certification-management-v1
                  group: tcs-certificate-events-processor
                  consumer:
                    concurrency: 10
                    max-attempts: 3
              certificateManagementProcessor-out-0:
                  destination: notification-delivery-request-v1


# Certificate Generator Config
certificateGenerator:
  base-folder: /opt/generator/
  background:
      achievement: tcs_background_achievement.pdf
      attendance: tcs_background_attendance.pdf
  templates: 
      achievement: tcs_achievement_certificate_template.docx
      attendance: tcs_attendance_certificate_template.docx 
  timestamp-authority: http://sha256timestamp.ws.symantec.com/sha256/timestamp
  keystore:
    file: tcs_keystore.jks
    password: ENC(QLt7JSsTwN1hfLsu3VXObGmfaIRqsDhTYCS8uDbyiS0=)
    certificate-alias: tcs
    type: pkcs12
  signature:
    name: Trust Certification System
    reason: Signature of digital certificates
    contact-info: ENC(YHxRr2kT1/EV9etrCyDh+Y6vPpwkQg9S)
  placeholders:
    ca-name: "[[CA_NAME]]"
    student-name: "[[STUDENT_NAME]]"
    course-name: "[[COURSE_NAME]]"
    student-qualification: "[[STUDENT_QUALIFICATION]]"
    certificate-date: "[[CERTIFICATE_DATE]]"
    executive-director: "[[EXECUTIVE_DIRECTOR]]"
